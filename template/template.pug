doctype html
html
  head
    meta(charset="utf-8")
    meta(http-equiv="x-ua-compatible", content="ie=edge")
    if package.title
      title= package.title
    else
      title= capitalize(package.name)
    meta(name="description", content="Docky")
    meta(name="viewport", content="width=device-width, initial-scale=1")

    link(rel="icon", href="images/favicon.png", type="image/x-icon")
    link(href='https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,500,600', rel='stylesheet', type='text/css')
    link(rel="stylesheet", href="css/normalize.css")
    link(rel="stylesheet", href="css/main.css")
    link(rel="stylesheet", href="css/hljs-theme.css")
    script(src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.4.0/highlight.min.js")

  body
    main
      //- Sidebar
      aside
        //- Sidebar header
        header(style="background-color:" + color)
          if package.title
            div.title
             strong= package.title
          else
            div.title= capitalize(package.name)
          div.info
            if package.version
              span.version (#{package.version})
            if package.homepage
              a.github(href=package.homepage, target="_blank") View on GitHub
                img(src="images/github.svg")

        ul.grouped
          each val, key in readmeParts
            li.heading
              a(href='#' + kebabCase(key))= key
          li.heading.noclick
            a Components
          each component in components
            li.subheading
              a(href='#' + component.name)= component.name

        footer
          p Generated with
            a(href="https://github.com/markmur/docky")  Docky


      section#methods
        if readme
          div#readme.container
            each val, key in readmeParts
              h2(id=kebabCase(key))= key
              div!= markdown(val)

        div.components
          each component in components
            div.component(id=component.name)
              header
                .container
                  h1= '<' + component.name + ' />'
              .container
                p!= markdown(component.description)
                table
                  thead
                    tr
                      th Name
                      th Type
                      th Default
                      th Description
                  tbody
                    each prop in component.props
                      tr
                        td
                          strong= prop.name
                        td= capitalize(prop.type)
                        td= prop.defaultValue
                        td= prop.description


    script(type="text/javascript").
      var sidebar = document.querySelector('aside');
      sidebar.addEventListener('mouseover', (e) => {
        document.body.classList.add('noscroll');
      });

      sidebar.addEventListener('mouseleave', (e) => {
        document.body.classList.remove('noscroll');
      });
    script(type="text/javascript").
      hljs.initHighlightingOnLoad();
    script(src="https://code.jquery.com/jquery-1.12.1.min.js")
    script(type="text/javascript").
      $('a[href^=\\#]').click(function(event) {
        $('html, body').animate({
          scrollTop: $( $.attr(this, 'href') ).offset().top
        }, 500);
        event.preventDefault();
      });
    script(src="js/waypoints.min.js")
    script(src="js/main.js")
